@model PIOAccount.Models.AccountOpeningModel
@using Microsoft.AspNetCore.Http
@using PIOAccount.Models
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int isAdministrator = HttpContextAccessor.HttpContext.Session.GetInt32("IsAdministrator").Value;
    List<PIOAccount.Models.AccountOpeningModel> accountopeningList = ViewBag.accountopeningList as List<PIOAccount.Models.AccountOpeningModel>;
    List<SelectListItem> layoutList = ViewBag.layoutList as List<SelectListItem>;
    List<SelectListItem> layoutListNew = ViewBag.LayoutListNew as List<SelectListItem>;
    List<SelectListItem> pageNoList = ViewBag.pageNoList as List<SelectListItem>;
    var userRight = ViewBag.userRight as PIOAccount.Models.UserFormRightModel;
    string headerAdd = "";
    string headerList = "";
    string gridAdd = "";
    string gridList = "";
    bool headerAddTrue = false;
    bool headerListTrue = false;

    if (userRight != null && (userRight.IsAdd || userRight.IsEdit) && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
    {
        headerAdd = "active";
        gridAdd = "show active";
        headerAddTrue = true;
    }
    else if (userRight != null && userRight.IsList)
    {
        headerList = "active";
        gridList = "show active";
        headerAddTrue = true;
    }
}


<div class="card card-primary">
    <div class="card-header" style="font-family: Nina">
        <h6> Account Opening</h6>
    </div>
    <div class="card-body">
        <div class="card card-primary card-tabs">
            <div class="card-header p-0 pt-1">
                <ul class="nav nav-tabs" id="custom-tabs-three-tab" role="tablist">
                    @if (userRight != null && userRight.IsList)
                    {
                        <li class="nav-item">
                            <a class="nav-link @headerList" id="custom-tabs-three-list-tab" data-toggle="pill" href="#custom-tabs-three-list" role="tab" aria-controls="custom-tabs-three-list" aria-selected="@headerListTrue" style="font-family: Nina;font-size:medium">List (Alt+L)</a>
                        </li>
                    }
                    @if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
                    {
                        <li class="nav-item">
                            <a class="nav-link @headerAdd" id="custom-tabs-three-add-tab" data-toggle="pill" href="#custom-tabs-three-add" role="tab" aria-controls="custom-tabs-three-add" aria-selected="@headerAddTrue" style="font-family: Nina;font-size:medium">Add/Update (F2)</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="card-body">
                <div class="col-md-12">
                    <div class="tab-content" id="custom-tabs-three-tabContent">
                        @if (userRight != null && userRight.IsList)
                        {
                            <div class="tab-pane fade @gridList" id="custom-tabs-three-list" role="tabpanel" aria-labelledby="custom-tabs-three-list-tab">
                                <div class="table-responsive mt-2" style="font-family: Nina;font-size:medium;font-display:inherit">
                                    <div class="col-md-12 col-12 mb-2 mt-2">
                                        <div class="row">
                                            <div class="col-md-1 mb-2 float-left">
                                                <select class="form-control form-control-sm" onchange="loadData()" id="drpReportPageNoDatable">
                                                    @for (int i = 0; i < pageNoList.Count; i++)
                                                    {
                                                        string checkedd = "checked";
                                                        <option checked="@checkedd" value="@pageNoList[i].Value">@pageNoList[i].Text</option>
                                                        checkedd = string.Empty;
                                                    }

                                                </select>
                                            </div>
                                            <div class="col-md-5 col-12">
                                                <div class="row">
                                                    <div class="col-md-6 col">
                                                        <select class="form-control select2 drpReportLayout" onchange="loadData()">
                                                            <option value="" ; style="width:200px">--Select Layout--</option>
                                                            @if (layoutList != null && layoutList.Count > 0)
                                                            {
                                                                foreach (var item in layoutList)
                                                                {
                                                                    <option value="@item.Value">@item.Text </option>
                                                                }
                                                            }
                                                        </select>
                                                    </div>
                                                    <div class="col-md-2 col-auto mb-2 custommt-2-3">
                                                        @if (isAdministrator == 1)
                                                        {
                                                            <button class="btn btn-dark btn-sm text-white" style="font-family: Nina;font-size:medium" onclick="window.open('/GridMaster/Index/' + $('.drpReportLayout').val(), '_blank');">
                                                                Edit
                                                            </button>
                                                        }
                                                    </div>
                                                    <div class="col-md-4 mb-2 custommt-2-3">
                                                        <button class="btn btn-primary btn-sm" id="btnExportToExcel">Excel</button>
                                                        <button class="btn btn-primary btn-sm ml-6" id="btnExportToPDF">PDF</button>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-3"></div>
                                            <div class="col-md-3 col-12 float-right">
                                                <input type="text" class="form-control form-control-sm" placeholder="Search" id="txtReportSearchDataTable" />
                                            </div>
                                        </div>
                                    </div>

                                    <div class="dataTable">

                                    </div>
                                    <div class="pager"></div>
                                </div>
                            </div>
                        }
                        @if (userRight != null && (userRight.IsAdd || userRight.IsEdit))
                        {
                            <div class="tab-pane fade" id="custom-tabs-three-add" role="tabpanel" aria-labelledby="custom-tabs-three-add-tab">
                                <form method="post" class="mt-4" id="openingForm">

                                    @Html.HiddenFor(x => x.Data)

                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div>
                                                        <label class="control-label col-md-3 col-sm-3 col-xs-12 font-weight-bold customLabel mt-2">
                                                            V.No <span class="required">*</span>
                                                        </label>

                                                        <div class="form-outline form-white mb-2">
                                                            @Html.TextBoxFor(x => x.OblVNo, new { @class = "form-control form-control-lg", @placeholder = "Voucher No", @tabindex = "1", @style = "height:35px;width:100px ", @required = "required" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div>
                                                        <label class="control-label col-md-3 col-sm-3 col-xs-12 font-weight-bold customLabel mt-2">
                                                            Department <span class="required">*</span>
                                                        </label>

                                                        <div class="form-outline form-white mb-1">
                                                            @if (Model != null && Model.DepList != null && Model.DepList.Count > 0)
                                                            {
                                                                @Html.DropDownListFor(x => x.OblDepVou, Model.DepList, "Select", new { @class = "form-control select2 OblDepVou", @tabindex = "2", style = "height:35px; width:250px", @onchange = "GetVoucherNumber()", @id = "txtOblDepVou", @required = "required" })
                                                            }
                                                            else
                                                            {
                                                                @Html.DropDownListFor(x => x.OblDepVou, Model.DepList, "Select", new { @class = "form-control select2 OblDepVou", @tabindex = "2", style = "height:35px; width:250px", @id = "txtOblDepVou", @required = "required" })
                                                            }

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6 d-none">
                                            <div>
                                                <label class="control-label col-md-3 col-sm-3 col-xs-12 font-weight-bold customLabel mt-2">
                                                    Date <span class="required"></span>
                                                </label>
                                                <div class="form-outline form-white mb-2">
                                                    <label class="form-control form-control-lg" style="font-family: Nina; font-size: small; height: 30px; width: 200px; background-color: #e9ecef; ">@Convert.ToDateTime(Model.OblDt).ToString("dd-MM-yyyy")</label>
                                                    @Html.TextBoxFor(x => x.OblDt, new { @class = "form-control form-control-lg", @placeholder = "Voucher No", @tabindex = "3", @style = "height:35px; width:100%", @required = "required", @type = "hidden" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    &nbsp;
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col-md-1 col-12">
                                                <div class="form-group">
                                                    <label class="control-label">
                                                        Sr.No
                                                    </label>
                                                    <input type="number" class="form-control" name="transactionGridSrNo" placeholder="Sr.No" onblur="EditRow(this.value)" style="height:35px;width:70px " />
                                                </div>
                                            </div>
                                            <div class="col-md-4 col-12">
                                                <div class="form-group">
                                                    <label class="control-label font-weight-bold customLabel w-100 text-left" style="text-align:right;">
                                                        Account Name <span class="required">*</span>
                                                    </label>
                                                    <input type="hidden" name="AccName" id="txtAccNm" value="@Model.AccName" />
                                                    <select class="form-control select2 OblAAccVou" style="height:35px;width:260px" tabindex="4" name="OblAAccVou">
                                                        <option value="">Select</option>
                                                        @if (Model.OblAccountList != null && Model.OblAccountList.Count > 0)
                                                        {
                                                            foreach (var item in Model.OblAccountList)
                                                            {
                                                                <option value="@item.Value"> @item.Text </option>
                                                            }
                                                        }
                                                    </select>
                                                    @*@Html.DropDownListFor(x => x.OpeningBal.OblAAccVou, new SelectList(Model.OblAccountList, "Value", "Text"), "Select", new { @class = "form-control select2 OblAAccVou", @tabindex = "4", style = "height:35px; width:200px", @onchange = "GetAccNm(this)"  })*@
                                                    <a class="btn btn-outline-info ml-2" href="/AccountMaster/index" target="_blank"><i class="fa fa-plus"></i></a>
                                                </div>
                                            </div>
                                            <div class="col-md-5 col-12 d-flex">
                                                <div class="form-group">
                                                    <label class="control-label font-weight-bold customLabel" style="text-align:right">
                                                        Amount <span class="required">*</span>
                                                    </label>

                                                    <input type="text" class="form-control form-control-lg" placeholder="Amount" tabindex="5" style="height:35px;width:150px;text-align:right " required="required" name="OblAAmt" onchange="GetAmount()" onkeyup="numericFilter(this)" />
                                                </div>
                                                <div class="form-group ml-2">
                                                    <label class="control-label font-weight-bold customLabel" style="text-align:right">
                                                        Cr/Dr <span class="required"></span>
                                                    </label>

                                                    <select class="form-control select2 OblACrDr" style="height:35px;width:100px" tabindex="6" name="OblACrDr" required="required">
                                                        <option value="">Select</option>
                                                        @if (Model.CrDrList != null && Model.CrDrList.Count > 0)
                                                        {
                                                            foreach (var item in Model.CrDrList)
                                                            {
                                                                <option value="@item.Value"> @item.Text </option>
                                                            }
                                                        }
                                                    </select>
                                                </div>
                                                <div class="form-group ml-3">
                                                    <label class="control-label font-weight-bold customLabel" style="text-align:left">
                                                        Remarks  <span class="ml-3" style="text-align:right" name="Amount">
                                                        </span>
                                                    </label>

                                                    <input type="text" class="form-control form-control-lg" placeholder="Remarks" tabindex="7" style="height:35px;width:220px " name="OblARemks" />

                                                </div>
                                            </div>
                                            <div class="col-md-2 col-12">
                                                <div class="form-group text-right" style="margin-top:35px">
                                                    <i class="fa fa-plus text-blue" onclick="AddDataToGrid()" style="font-size:18px"></i>
                                                    <i class="fa fa-sync text-blue ml-3" onclick="ClearTextbox()" style="font-size:18px"></i>
                                                    <i class="fa fa-trash text-red ml-3 deleteButton" onclick="DeleteConfirmationTransaction('transaction-grid-1')"></i>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <div class="row d-none">
                                            <div class="col-2 d-none">
                                                <label>Tran. Layout</label>
                                            </div>
                                            <div class="col-2 d-none">
                                                <select class="form-control drpTransactionLayout">
                                                    @if (layoutListNew != null && layoutListNew.Count > 0)
                                                    {
                                                        foreach (var item in layoutListNew)
                                                        {
                                                            <option value="@item.Value">@item.Text</option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-11"></div>
                                            <div class="col-1">

                                            </div>
                                        </div>
                                        <div class="customDivision">
                                            <table class="custom-table gridViewTableResponsiveTransactionGridForm" id="transaction-grid-1">
                                            </table>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="py-2 float-right d-flex align-items-center">
                                                <label class="control-label font-weight-bold customLabel pr-2" style="font-family: Nina;font-size:medium;text-align:right">
                                                    Total
                                                </label>
                                                <div class="form-outline form-white mb-2">
                                                    <input type="text" id="txtOblAmount" readonly name="OblAmount" class="form-control form-control-lg" value="@Model.OblAmount" style="height:35px; width: 150px;text-align:right" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 text-center">
                                            @if (userRight.IsEdit && Model != null && Model.OblVou > 0)
                                            {
                                                <button class="btn btn-primary px-md-4 text-white" style="font-family: Nina;font-size:medium" id="btnSave" type="button" onclick="AddOpening()">
                                                    Save (F10)
                                                </button>
                                                <a href="/AccountOpening/index" class="btn btn-warning px-md-4 text-dark" style="font-family: Nina;font-size:medium">
                                                    Cancel (Esc)
                                                </a>
                                            }
                                            else if (userRight.IsAdd && Model.OblVou == 0)
                                            {
                                                <button class="btn btn-primary px-md-4 text-white" style="font-family: Nina;font-size:medium" id="btnSave" type="button" onclick="AddOpening()">
                                                    Save (F10)
                                                </button>
                                                <a href="/AccountOpening/index" class="btn btn-warning px-md-4 text-dark" style="font-family: Nina;font-size:medium">
                                                    Cancel (Esc)
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div class="col-md-12">
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var acbvno = '@Html.Raw(Model.OblVou)';
        if (acbvno != null && acbvno != '' && acbvno != "0") {
            GoToAddTab()
        }
        else {
            GoToListTab()
        }


            var status = '@Html.Raw(ViewBag.FocusType)';
            if (status != null && status != '') {
                if (status == "0") {
                    $("#txtAcbVNo").focus();
                }
                if (status == "1") {
                    $("#txtAcbOpDt").focus();
                }
            }
            else {
                $("#txtAcbVNo").focus();
            }


        });

    function GoToAddTab() {
        $('#custom-tabs-three-list-tab').removeClass('active');
        $('#custom-tabs-three-add-tab').addClass('active');

        $('#custom-tabs-three-list').removeClass('active');
        $('#custom-tabs-three-add').addClass('active');
        $('#custom-tabs-three-add').addClass('show');
        $('#txtOblDepVou').focus();
        if ($('#txtOblDepVou').children('option').length == 2) {
            $('#txtOblDepVou').val($('#txtOblDepVou').children('option').eq(1).attr('value'));
            SetSelect2();
            //$('#txtBilDepVou').attr('disabled', true);
            $('#OblVNo').focus();
        }
    }
    function GoToListTab() {
        $('#custom-tabs-three-list-tab').addClass('active');
        $('#custom-tabs-three-add-tab').removeClass('active');

        $('#custom-tabs-three-list').addClass('active');
        $('#custom-tabs-three-list').addClass('show');
        $('#custom-tabs-three-add').removeClass('active');
        $('#custom-tabs-three-add').removeClass('show');
        $('#txtReportSearchDataTable').focus();
    }
</script>
<script>
    var isRecentCalledEsc = false;
    var isRecentCalledAddRows = false;
    var isRecentCalledSave = false;
    (function (code) {
        code(window.jQuery, document, window);
    }(function ($, document, window) {
        $(function () {
            $(window)
                .initKeyboard({ debug: 1 })
                .on('F2', function () {
                    GoToAddTab()
                    $(".OblAAccVou").select2({
                        placeholder: "---Select---",
                        // added by anand on 25-01-2023 point no 19 from anand point
                        ajax: {
                            url: '/AccountOpening/GetAccount-List',
                            data: function (params) {
                                return {
                                    q: params.term// search term
                                };
                            },
                            processResults: function (data) {
                                return {
                                    results: data.items
                                }
                            },

                        }
                    });
                }).on('F10', function () {
                    if (!isRecentCalledSave) {
                        $("#btnSave").click();
                        isRecentCalledSave = true;
                        setTimeout(function () {
                            isRecentCalledSave = false;
                        }, 1000)
                    }
                })
                .on('Alt+L', function () {
                    GoToListTab();
                })
                .on('Alt+C', function () {
                    if (confirm("Do you want to exit without save?")) {
                        location.href = '/AccountOpening/Index'
                    }
                    else {
                        $('#txtAcbVNo').focus();
                    }

                }).on('Escape', function () {
                    if (!isRecentCalledEsc) {
                        isRecentCalledEsc = true;
                        if (confirm("Do you want to exit without save?")) {
                            location.href = '/AccountOpening/Index'
                        }
                        else {
                            $('#txtAcbVNo').focus();
                        }
                        setTimeout(function () {
                            isRecentCalledEsc = false;
                        }, 500)
                    }

                })
                .on('Pagedown', function () {
                    if (!isRecentCalledAddRows) {
                        isRecentCalledAddRows = true;
                        //Add below mentioned code to add rows dynamically in transaction grid.
                        AddDataToGrid()

                        //Compulsory to keep to remove selected value from dropdown
                        SetSelect2();

                        $(".OblAAccVou").select2({
                            placeholder: "---Select---",
                            // added by anand on 25-01-2023 point no 19 from anand point
                            ajax: {
                                url: '/AccountOpening/GetAccount-List',
                                data: function (params) {
                                    return {
                                        q: params.term// search term
                                    };
                                },
                                processResults: function (data) {
                                    return {
                                        results: data.items
                                    }
                                },

                            }
                        });

                        //Focus to textbox or dropdown
                        var value = $('select[name="OblAAccVou"]').val();
                        if (value == null || value == undefined || value == '')
                            $('select[name="OblAAccVou"]').focus();

                        CountMaster();

                        setTimeout(function () {
                            isRecentCalledAddRows = false;
                        }, 500)
                    }
                })
            //.on('Alt+I', function () {
            //    AddRows();
            //})
        });
    }));
</script>


<script>

    //var isCalled = false;
    var isRecentCall = false;
    var isExcelUpload = false;
    var isPasteDone = false;
    var isSaveCalled = false;

    //var depList = JSON.parse('@Html.Raw(Json.Serialize(Model.DepList))');

    function numberWithCommas(x) {
        x = x.toString();
        var afterPoint = '';
        if (x.indexOf('.') > 0)
            afterPoint = x.substring(x.indexOf('.'), x.length);
        x = Math.floor(x);
        x = x.toString();
        var lastThree = x.substring(x.length - 3);
        var otherNumbers = x.substring(0, x.length - 3);
        if (otherNumbers != '')
            lastThree = ',' + lastThree;
        var res = otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree + afterPoint;
        return res;
    }

    function numeric_only(event, input) {
        if ((event.which < 32) || (event.which > 126)) return true;
        return jQuery.isNumeric($(input).val() + String.fromCharCode(event.which));
    }//

    function numericFilter(txb) {
        //txb.value = txb.value.replace(/[^\0-9]/ig, "");
        txb.value = numericGujOrEng(xy);
    }

    function numericGujOrEng(xy) {
        var xLen = xy.length;
        var xNum = "";

        for (let i = 0; i < xLen; i++) {
            if (xy[i] == "૧")
                xNum += "1";
            else if (xy[i] == "૨")
                xNum += "2";
            else if (xy[i] == "૩")
                xNum += "3";
            else if (xy[i] == "૪")
                xNum += "4";
            else if (xy[i] == "૫")
                xNum += "5";
            else if (xy[i] == "૬")
                xNum += "6";
            else if (xy[i] == "૭")
                xNum += "7";
            else if (xy[i] == "૮")
                xNum += "8";
            else if (xy[i] == "૯")
                xNum += "9";
            else if (xy[i] == "૦")
                xNum += "0";
            else
                xNum += xy[i].replace(/[^\0-9]/ig, "");
        }
        return xNum;
    }

    function CountMaster() {
        var ttlAmount = 0;
        $('#transaction-grid-1').children('tbody').children('tr').each(function () {
            if ($(this).children('td').eq(3).html() != '') {
                ttlAmount = parseFloat(ttlAmount) + parseFloat($(this).children('td').eq(3).html());
                var ttAmt = parseFloat(ttlAmount).toFixed(2);
                $('#txtOblAmount').val(numberWithCommas(ttAmt));
            }
        });
    }

    function GetVoucherNumber() {
        var depVal = $('select[name="OblDepVou"]').val();
        if (depVal) {
            $.ajax({
                type: "POST",
                url: '/AccountOpening/GetLatestVouNumber',
                data: { "vou": depVal },
                dataType: "JSON",
                success: function (response) {
                    $('input[name="OblVNo"]').val(response.message);
                },
                error: function (response) {

                }
            });
        }
    }

    function GetAmount() {
        //var amt = $('input[name="OblAAmt"]').val();
        var amt = numericGujOrEng($('input[name="OblAAmt"]').val());
        if (amt == 'NaN' || amt == '') { $('input[name="OblAAmt"]').focus(); $('input[name="OblAAmt"]').val(''); }
        else {
            var amt1 = (parseFloat(amt)).toFixed(2);
            $('input[name="OblAAmt"]').val(amt1);
            $('span[name="Amount"]').html(numberWithCommas(amt1));
        }
    }


    $('#OblDt').focusout(function () {
        $('#tblAccountOpeningTransaction').children().find('tr.lastRow').prev().children('td').eq(1).children('select').focus();
    })


    $("form").submit(function (e) {
         if (!isSaveCalled) {
            isSaveCalled = true;
            setTimeout(function () {
                isSaveCalled = false;
            }, 1000)
            if (ValidateTextbox()) {
                localStorage.setItem("AccouontOpening", "1");
                if (!isRecentCall) {
                    var eamt = $('input[name="OblAAmt"]').val();
                    var eaccvou = $('select[name="OblAAccVou"]').val();
                    //var eaccvou1 = $('select[name="AccVou"]').val();
                    if (eamt != 0 && eamt != '' && eamt != undefined && eaccvou != 0 && eaccvou != '' && eaccvou != undefined) {
                    //if (eamt != 0 && eamt != '' && eamt != undefined && eaccvou1 != 0 && eaccvou1 != '' && eaccvou1 != undefined) {
                        AddDataToGrid()
                    }
                    else {
                        if ($('#transaction-grid-1').children('tbody').children('tr:not(.totalRow)').length <= 0) {
                            alert("Please add data to grid.")
                            e.preventDefault();
                            return false;
                        }
                    }                    
                }
                $('form').unbind('submit').submit();
            }
            else {
                showErrorMessage("Please enter all compulsory fields!");
                return false;
            }
        }
    });

</script>

<script>

    var isRecentCalled = false;
    var accList = JSON.parse('@Html.Raw(Json.Serialize(Model.OblAccountList))');

    $(function () {

        loadData();
        var pageIndex = '';
        var pageSize = '';
        var totalRecord = '';
        var isDelete = '@Html.Raw(userRight.IsDelete)';
        var isEdit = '@Html.Raw(userRight.IsEdit)';
    })

    var timer = null;
    $('#txtReportSearchDataTable').keyup(function (e) {
        if (e.keyCode >= 112 && e.keyCode <= 123) {
            e.preventDefault();
            return false;
        }
        else {
            clearTimeout(timer);

            timer = setTimeout(loadData, 1000)
        }

    });

    function GetAccNm(obj) {
        var accvalue = $(obj).val();
        if (accvalue) {
            if (accList != null && accList.length > 0) {
                for (var x = 0; x < accList.length; x++) {
                    if (accList[x].value == accvalue) {
                        var accName = accList[x].value;
                        $('#txtAccNm').val(accList[x].text)
                    }
                }
            }
        }
    }

    function loadData(pageIndex, columnName, sortBy) {
            isRecentCalled = true;
            if (pageIndex == undefined || pageIndex == "" || pageIndex == "0" || pageIndex == 0) {
                pageIndex = 1;
            }
            var layoutId = $('.drpReportLayout').val();

            if (!layoutId) {
                $('.drpReportLayout').val($('.drpReportLayout').children('option').eq(1).prop('value'));
                SetSelect2()

            }
            if (!columnName) {
                columnName = '';
            }
            if (!sortBy) {
                sortBy = '';
            }
            $('.dataTable').html();
            $.ajax({
                url: '/AccountOpening/GetReportView',
                type: 'GET',
                data: { pageIndex: pageIndex, pageSize: $('#drpReportPageNoDatable').val(), searchValue: $('#txtReportSearchDataTable').val(), gridMstId: $('.drpReportLayout').val(), columnName: columnName, sortby: sortBy },
                dataType: 'HTML',
                traditional: true, // add this
                success: function (data) {
                    $('.dataTable').html(data);
                    setTimeout(function () {
                        isRecentCalled = false;
                    }, 2000)
                },
                failure: function (response) {
                    errorMessage(response);
                }
            });
    }

    $('#btnExportToExcel').click(function () {
        window.location.href = "/AccountOpening/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() +"&type=1";
    })

    $('#btnExportToPDF').click(function () {
        window.location.href = "/AccountOpening/ExportToExcelPDF?gridMstId=" + $('.drpReportLayout').val() + "&searchValue=" + $('#txtReportSearchDataTable').val() + "&type=2";
    })

    //var isSaveCalled = false;
    function ValidateTextbox() {
        var isAllow = true;
        if (!$('select[name="OblDepVou"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="OblVNo"]').val()) {
            isAllow = false;
        }
        if (!$('input[name="OblDt"]').val()) {
            isAllow = false;
        }

        return isAllow;
    }


    function AddOpening() {
        if (ValidateTextbox()) {
            $('#Vno').removeAttr('disabled');
            $('#AnnVou').removeAttr('disabled');
            $("#tblDisplay tr td").find("input").attr('disabled', false);
            $("#tblDisplay tr td").find("select").attr('disabled', false);
            $('#openingForm').submit();
        }
        else {
            showErrorMessage("Please enter all compulsory fields.");
        }
    }

</script>
<script>
    $(document).ready(function () {
        $('#OblVNo').focusout(function () {
            $('#tblAccOblTran').children().find('tr.lastRow').prev().children('td').eq(1).children('select').focus();
        })
    })
</script>
<script>
    function SetSelect2() {
        $(".select2").select2({
            placeholder: "---Select---",
        });
    }
    $(document).ready(function () {

        $(".OblDepVou").select2({
            placeholder: "---Select---",
        });

        $(".OblAAccVou").select2({
            placeholder: "---Select---",
        });

        //$(".AccVou").select2({
        //    placeholder: "---Select---",
        //});

        $(".OblACrDr").select2({
            placeholder: "---Select---",
        });

        $('.drpReportLayout').select2({
            placeholder: "---Select---",
        });
    });
</script>
<script>
    $(document).ready(function () {
        $(".OblAAccVou").select2({
            placeholder: "---Select---",
            // added by anand on 25-01-2023 point no 19 from anand point
            ajax: {
                url: '/AccountOpening/GetAccount-List',
                data: function (params) {
                    return {
                        q: params.term// search term
                    };
                },
                processResults: function (data) {
                    return {
                        results: data.items
                    }
                },

            }
        });

    });
</script>

@section Scripts{
    <script src="~/js/transaction-grid.js"></script>

    <script>
        $('input[name="transactionGridSrNo"]').blur(function () {
            setTimeout(function () {
                SetSelect2();

                $('select[name="OblAAccVou"]').focus();
            }, 200)

            //setTimeout(function () {
            //    SetSelect2();

            //    $('select[name="AccVou"]').focus();
            //}, 200)
        })

        $('.deleteButton').click(function () {
            setTimeout(function () {
                CountMaster();
            }, 1000)
        })
    </script>
}